//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Koshop.DomainClasses
{
    
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class User : TimeEntity
    {
        public User()
        {
            this.Address_Users = new HashSet<Address_User>();
            this.ContactPersons = new HashSet<ContactPerson>();
            this.Messages = new HashSet<Message>();
            this.Messages1 = new HashSet<Message>();
            this.News = new HashSet<News>();
            this.Orders = new HashSet<Order>();
            this.UserStore = new HashSet<UserStore>();
            this.ProductRequest = new HashSet<ProductRequest>();
            this.TicketMsg = new HashSet<TicketMsg>();
            this.Ticket = new HashSet<Ticket>();
            this.StoreFollower = new HashSet<StoreFollower>();
        }
    
        public int UserId { get; set; }

        [Display(Name = "نام")]
        [StringLength(50, ErrorMessage = "تعداد کاراکترها را رعایت کنید")]
        public string Name { get; set; }

        [Display(Name = "نام کاربری")]
        [StringLength(50, ErrorMessage = "تعداد کاراکترها را رعایت کنید")]
        public string UserName { get; set; }

        [Display(Name = "رمز عبور")]
        [StringLength(50, ErrorMessage = "تعداد کاراکترها را رعایت کنید")]
        public string Password { get; set; }

        [Display(Name = "کد فعالسازی")]
        [StringLength(100, ErrorMessage = "تعداد کاراکترها را رعایت کنید")]
        public string ActiveCode { get; set; }

        [Display(Name = "نقش کاربر")]
        public int RoleId { get; set; }

        [Display(Name = "وضعیت ثبت نام")]
        public Nullable<bool> ISActive { get; set; }

        [Display(Name = "ایمیل")]
        [StringLength(100, ErrorMessage = "تعداد کاراکترها را رعایت کنید")]
        public string Email { get; set; }

        [Display(Name = "تصویر پروفایل")]
        [StringLength(50, ErrorMessage = "تعداد کاراکترها را رعایت کنید")]
        public string Profile { get; set; }

        [Display(Name = "شماره ملی")]
        [StringLength(50, ErrorMessage = "تعداد کاراکترها را رعایت کنید")]
        public string MeliID { get; set; }

        [Display(Name = "تاریخ تولد")]
        [StringLength(50, ErrorMessage = "تعداد کاراکترها را رعایت کنید")]
        public string BirthDate { get; set; }

        [Display(Name = "شماره موبایل")]
        [StringLength(50, ErrorMessage = "تعداد کاراکترها را رعایت کنید")]
        public string moblie { get; set; }

        [Display(Name = "شماره تلفن")]
        [StringLength(50, ErrorMessage = "تعداد کاراکترها را رعایت کنید")]
        public string phoneNo { get; set; }

        [Display(Name = "استان")]
        public Nullable<int> State { get; set; }

        [Display(Name = "شهر")]
        public Nullable<int> City { get; set; }

        [Display(Name = "آدرس")]
        [StringLength(50, ErrorMessage = "تعداد کاراکترها را رعایت کنید")]
        public string Adress { get; set; }

        public Nullable<int> chartPostId { get; set; }

        public Nullable<System.DateTime> activecodeDate { get; set; }
    
        public virtual ICollection<Address_User> Address_Users { get; set; }
        public virtual ICollection<ContactPerson> ContactPersons { get; set; }
        public virtual ICollection<Message> Messages { get; set; }
        public virtual ICollection<Message> Messages1 { get; set; }
        public virtual ICollection<News> News { get; set; }
        public virtual ICollection<NewsComment> NewsComments { get; set; }
        public virtual ICollection<Order> Orders { get; set; }
        public virtual Role Role { get; set; }
        public virtual ICollection<UserStore> UserStore { get; set; }
        public virtual chartPost chartPost { get; set; }
        public virtual ICollection<ProductRequest> ProductRequest { get; set; }
        public virtual ICollection<TicketMsg> TicketMsg { get; set; }
        public virtual ICollection<Ticket> Ticket { get; set; }
        public virtual ICollection<StoreFollower> StoreFollower { get; set; }
    }
}
